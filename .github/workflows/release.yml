name: Create Release

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Extract version from gradle.properties
      id: get_version
      run: |
        VERSION=$(grep '^mod_version=' gradle.properties | cut -d'=' -f2)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"
        
    - name: Check if tag exists
      id: check_tag
      run: |
        if git rev-parse "v${{ steps.get_version.outputs.version }}" >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Tag v${{ steps.get_version.outputs.version }} already exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Tag v${{ steps.get_version.outputs.version }} does not exist"
        fi
        
    - name: Build mod
      if: steps.check_tag.outputs.exists == 'false'
      run: ./gradlew build --no-daemon
      
    - name: Create tag
      if: steps.check_tag.outputs.exists == 'false'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag "v${{ steps.get_version.outputs.version }}"
        
    - name: Create GitHub Release
      if: steps.check_tag.outputs.exists == 'false'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        name: "Sprunki Identity Addon v${{ steps.get_version.outputs.version }}"
        body: |
          ## Sprunki Identity Addon v${{ steps.get_version.outputs.version }}
          
          **Requirements:**
          - Minecraft 1.20.1
          - Forge 47.4.0+
          - [Identity Fix (Morph)](https://www.curseforge.com/minecraft/mc-mods/identity-fix-morph) 2.8.5+
          - [Sprunki](https://www.curseforge.com/minecraft/mc-mods/sprunki) 1.0.9+
          
          **Installation:**
          1. Download the JAR file below
          2. Place in your `mods/` folder alongside Identity and Sprunki mods
          3. Launch Minecraft with Forge profile
          
          **Features:**
          - Bridge Sprunki and Identity mods for music abilities when morphed
          - Fix multiplayer compatibility for Sprunki mod
          - Support for all Sprunki characters and their horror variants
          
          **Usage:**
          Morph into any Sprunki character and press your ability key (default: R) to play their unique music!
        files: |
          build/libs/*.jar
        draft: false
        prerelease: false
        make_latest: true
        generate_release_notes: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Skip release (tag exists)
      if: steps.check_tag.outputs.exists == 'true'
      run: echo "Skipping release creation - tag v${{ steps.get_version.outputs.version }} already exists"